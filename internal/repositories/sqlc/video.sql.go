// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: video.sql

package catalogsql

import (
	"context"

	uuid "github.com/google/uuid"
)

const findVideoByID = `-- name: FindVideoByID :one

SELECT
    video_id,
    upload_user_id,
    created_at,
    updated_at,
    title,
    description,
    raw_file_reference,
    status,
    media_status,
    analysis_status,
    raw_file_size,
    raw_resolution,
    raw_bitrate,
    duration_micros,
    encoded_resolution,
    encoded_bitrate,
    thumbnail_url,
    hls_master_playlist,
    difficulty,
    summary,
    tags,
    raw_subtitle_url,
    error_message
FROM catalog.videos
WHERE video_id = $1
`

// Video 业务相关的 SQL 查询定义
// 由 sqlc 生成类型安全的 Go 代码
// 根据 video_id 查询视频详情
func (q *Queries) FindVideoByID(ctx context.Context, videoID uuid.UUID) (CatalogVideo, error) {
	row := q.db.QueryRow(ctx, findVideoByID, videoID)
	var i CatalogVideo
	err := row.Scan(
		&i.VideoID,
		&i.UploadUserID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Title,
		&i.Description,
		&i.RawFileReference,
		&i.Status,
		&i.MediaStatus,
		&i.AnalysisStatus,
		&i.RawFileSize,
		&i.RawResolution,
		&i.RawBitrate,
		&i.DurationMicros,
		&i.EncodedResolution,
		&i.EncodedBitrate,
		&i.ThumbnailUrl,
		&i.HlsMasterPlaylist,
		&i.Difficulty,
		&i.Summary,
		&i.Tags,
		&i.RawSubtitleUrl,
		&i.ErrorMessage,
	)
	return i, err
}
